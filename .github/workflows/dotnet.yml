name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout StayInTarkov.Client
      uses: actions/checkout@v4
      with:
        repository: 'StayInTarkov/StayInTarkov.Client'
        branch: 'master'
        path: 'StayInTarkov.Client'

    - name: Checkout SIT.Launcher.Classic
      uses: actions/checkout@v4
      with:
        repository: 'StayInTarkov/SIT.Launcher.Classic'
        branch: 'master'
        path: 'SIT.Launcher.Classic'

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: | 
          6.0.x
          7.0.x

    - name: Determine .NET version and build submodules
      run: |
        for dir in $(find . -name '*.csproj'); do
          cd $(dirname $dir)
          dotnet_version=$(grep -Po '<TargetFramework>\K[^<]*' $(basename $dir))
          dotnet restore
          echo "Building $(basename $dir) with .NET version $dotnet_version"
          dotnet build /p:EnableWindowsTargeting=true --configuration ${{ matrix.configuration }} --no-restore
          cd -
        done


    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: archive
        path: |
          **/bin/Release/**/${{ matrix.configuration }}/*.zip

    - name: List artifacts
      run: |
        echo "List of artifacts:" > artifacts.txt
        find . -name '*.zip' >> artifacts.txt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        if: github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.master_branch)
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        if: github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.master_branch)
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./artifacts.txt
        asset_name: artifacts.txt
        asset_content_type: text/plain